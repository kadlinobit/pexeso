[{"C:\\Projects\\React-Own\\pexeso\\src\\components\\App.js":"1","C:\\Projects\\React-Own\\pexeso\\src\\index.js":"2","C:\\Projects\\React-Own\\pexeso\\src\\components\\Game.js":"3","C:\\Projects\\React-Own\\pexeso\\src\\components\\MemCard.js":"4","C:\\Projects\\React-Own\\pexeso\\src\\hooks\\useWindowDimensions.js":"5","C:\\Projects\\React-Own\\pexeso\\src\\helpers\\index.js":"6","C:\\Projects\\React-Own\\pexeso\\src\\components\\EndGame.js":"7"},{"size":613,"mtime":1612598587007,"results":"8","hashOfConfig":"9"},{"size":201,"mtime":1612425398579,"results":"10","hashOfConfig":"9"},{"size":4670,"mtime":1612558666198,"results":"11","hashOfConfig":"9"},{"size":1113,"mtime":1612552504659,"results":"12","hashOfConfig":"9"},{"size":606,"mtime":1612432551467,"results":"13","hashOfConfig":"9"},{"size":1618,"mtime":1612553329185,"results":"14","hashOfConfig":"9"},{"size":138,"mtime":1612598537083,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"1cxsen5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\React-Own\\pexeso\\src\\components\\App.js",["32","33","34"],"import React, { useState } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nimport StartGame from 'components/StartGame';\r\nimport EndGame from 'components/EndGame';\r\nimport Game from 'components/Game';\r\n\r\nconst renderApp = (gamePhase) => {\r\n    switch(gamePhase) {\r\n        case 0: \r\n            return <StartGame />\r\n        case 1: \r\n            return <Game />\r\n        case 2:\r\n            return <EndGame />\r\n        default:\r\n            <StartGame />\r\n    }\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const [gamePhase, setGamePhase] = useState(0);\r\n\r\n    return renderApp();\r\n}\r\n\r\nexport default App;","C:\\Projects\\React-Own\\pexeso\\src\\index.js",[],"C:\\Projects\\React-Own\\pexeso\\src\\components\\Game.js",["35"],"C:\\Projects\\React-Own\\pexeso\\src\\components\\MemCard.js",["36","37","38","39"],"import React, { useState } from 'react';\r\n//import { useSpring, animated as a } from \"react-spring\";\r\nimport { Card, Transition, Image } from 'semantic-ui-react';\r\n\r\nconst MemCard = ({ card, onCardClick, animateWin }) => {\r\n\r\n    const { id, image, imageId } = card;\r\n    const animation = 'horizontal flip';\r\n    const duration = 500;\r\n    const visible = true;\r\n\r\n    return (\r\n        <Transition animation='jiggle' duration={500} visible={ animateWin } >\r\n            <Card>\r\n            {/*<Transition.Group animation='horizontal flip' duration={ 200 }>*/}\r\n\r\n                { card.flipped && (       \r\n                            <Image style={{ width: '100%'}} src={ image } />      \r\n                )}\r\n                { !card.flipped && (               \r\n                            <Image onClick={ () => onCardClick(id, imageId) } style={{ width: '100%'}} src={`${process.env.PUBLIC_URL}/img/back-1.png`} />                              \r\n                )} \r\n            \r\n            {/*</Transition.Group>*/}\r\n            </Card>  \r\n        </Transition>     \r\n    );\r\n}\r\n\r\nexport default MemCard;","C:\\Projects\\React-Own\\pexeso\\src\\hooks\\useWindowDimensions.js",[],"C:\\Projects\\React-Own\\pexeso\\src\\helpers\\index.js",[],"C:\\Projects\\React-Own\\pexeso\\src\\components\\EndGame.js",[],{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":23,"column":12,"nodeType":"42","messageId":"43","endLine":23,"endColumn":21},{"ruleId":"40","severity":1,"message":"45","line":23,"column":23,"nodeType":"42","messageId":"43","endLine":23,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":42,"column":8,"nodeType":"48","endLine":42,"endColumn":23,"suggestions":"49"},{"ruleId":"40","severity":1,"message":"50","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"51","line":8,"column":11,"nodeType":"42","messageId":"43","endLine":8,"endColumn":20},{"ruleId":"40","severity":1,"message":"52","line":9,"column":11,"nodeType":"42","messageId":"43","endLine":9,"endColumn":19},{"ruleId":"40","severity":1,"message":"53","line":10,"column":11,"nodeType":"42","messageId":"43","endLine":10,"endColumn":18},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'gamePhase' is assigned a value but never used.","'setGamePhase' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'size'. Either include it or remove the dependency array.","ArrayExpression",["54"],"'useState' is defined but never used.","'animation' is assigned a value but never used.","'duration' is assigned a value but never used.","'visible' is assigned a value but never used.",{"desc":"55","fix":"56"},"Update the dependencies array to be: [width, height, size]",{"range":"57","text":"58"},[1749,1764],"[width, height, size]"]